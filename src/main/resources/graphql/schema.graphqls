type Query{
    getFlightByName(
        name: String!
    ): Flight

    getBookings(
        passengerId: ID
        flightId: ID
        bookingDate: String
    ): [Booking]

    getAirLines(
        name: String
        code: String
        country: String
    ): [Airline]

    getAirports(
        code: String
        name: String
        city: String
        country: String
    ): [Airport]

    getPassengers(
        firstName: String
        email: String
        passportNumber: String
    ) : [Passenger]
}

type Mutation {
    addBooking(
        passengerId: ID!
        flightId: ID!
        bookingDate: String!
        status: String!
        seatId: ID!
        baggageWeight: String!
        baggageType: String!
    ): Booking

    createAirLine(
        name: String!
        code: String!
        country: String!
    ): Airline

    createAirport(
        code: String!
        name: String!
        city: String!
        country: String!
    ): Airport

    createFlight(
        name: String!
        departureTime: String!
        arrivalTime: String!
        airline: ID!
        routeId: ID!
    ): Flight

    createPassenger(
        firstName: String!
        lastName: String!
        email: String
        phoneNumber: String
        passportNumber: String!
    ): Passenger

    createSeat(
        flightId: ID!
        seatNumber: String!
        classType: String!
        isAvailable: String!
        price: String!
    ): Seat

    createRoute(
        routeId: ID!
        originAirportId: ID!
        destinationAirportId: ID!
        routeCode: String!
        description: String!
        flights: [ID]
    ): Route
}

type Booking {
    id: ID!
    passenger: Passenger!
    flight: Flight!
    bookingDate: String!
    status: String!
    seat: Seat!
    baggage: Baggage!
}

type Passenger {
    id: ID!
    firstName: String!
    lastName: String!
    email: String
    phoneNumber: String
    passportNumber: String
    bookings: [Booking]
}

type Flight {
    id: ID!
    name: String!
    departureTime: String
    arrivalTime: String
    airline: Airline!
    route: Route!
}

type Airport {
    id: ID!
    country: String
    city: String
    name:String
    code:String
}

type Airline {
    id: ID!
    name: String!
    code: String
    country: String
    flights: [Flight]
}

type Seat{
    id: ID!
    flight: Flight!
    classType: String!
    seatNumber: String!
    isAvailable: Boolean!
    price: Float!
}

type Baggage{
    id: ID!
    passenger: Passenger!
    weight: String!
    type: String!
}

type Route {
    id: ID!
    origin: Airport!
    destination: Airport!
    routeCode: String!
    description: String!
    flights: [Flight]
}




